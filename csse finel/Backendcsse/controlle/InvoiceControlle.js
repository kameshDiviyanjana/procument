const Invoice = require('../models/InvoiceModle');

// Add a new invoice
const addInvoice = async (req, res) => {
    const {
        OrderID,
        Price,
        Date,
        Items,
    } = req.body;

    const result = await Invoice.find();
    const invoiceCount = result.length;
    const autoGeneratedInvoiceId = `${invoiceCount + 1}`;

    const newInvoice = new Invoice({
        InvoiceID: autoGeneratedInvoiceId,
        OrderID,
        Price,
        Date,
        Items,
    });

    newInvoice.save().then((result) => {
        res.status(200).json({
            message: "Invoice added successfully",
            result: {
                data: result,
                response: true,
            },
        });
    });
}

// Read all invoices in the system
const getAllInvoices = async (req, res) => {
    try {
        const results = await Invoice.find();
        res.status(200).json({
            message: "All order invoice details",
            data: results,
        });
    } catch (error) {
        res.status(500).json({
            message: "Error while getting all invoices",
            error: error.message,
        });
    }
};

// Update invoice details
const updateInvoice = async (req, res) => {
    const {
        OrderID,
        Price,
        Date,
        Items,
    } = req.body;
    try {
        const result = await Invoice.findOneAndUpdate({ OrderID: OrderID }, {
            OrderID,
            Price,
            Date,
            Items,
        }, { new: true });

        res.status(200).json({
            message: "Invoice updated successfully",
            data: result,
        });
    } catch (error) {
        res.status(500).json({
            message: "Error while updating the invoice",
            error: error.message,
        });
    }
};

// Delete an invoice by ID
const deleteInvoice = async (req, res) => {
    try {
        const response = await Invoice.findByIdAndDelete(req.params.id);
        if (!response) {
            res.status(404).json({
                message: "Invoice not found",
                response: false,
            });
        } else {
            res.status(200).json({
                message: "Invoice deleted successfully",
                result: {
                    data: response,
                    response: true,
                },
            });
        }
    } catch (error) {
        res.status(500).json({
            message: "Error while deleting the invoice",
            error: error.message,
        });
    }
};

// Get invoice details by ID
const getInvoice = async (req, res) => {
    try {
        const response = await Invoice.findById(req.params.id);
        if (!response) {
            res.status(404).json({
                message: "Invoice not found",
                response: false,
            });
        } else {
            res.status(200).json({
                result: {
                    data: response,
                    response: true,
                },
            });
        }
    } catch (error) {
        res.status(500).json({
            message: "Error while getting invoice details",
            error: error.message,
        });
    }
};

module.exports = {
    addInvoice,
    getAllInvoices,
    deleteInvoice,
    getInvoice,
    updateInvoice
};
